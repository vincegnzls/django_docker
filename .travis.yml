dist: xenial

language: python
python:
  - "3.8"
sudo: required
services:
  - docker
jobs:
  include:
    - name: "Linter"
      before_script:
        - pip install -q flake8
      script:
        - "flake8"

    - name: "Django Test and Deploy"
      # before_script:
      #   - docker-compose -v
      #   - docker -v
      #   - docker-compose -f local.yml build
      #   # Ensure celerybeat does not crash due to non-existent tables
      #   - docker-compose -f local.yml run --rm django python manage.py migrate
      #   - docker-compose -f local.yml up -d
      script:
        # - "docker-compose -f local.yml run django pytest"
        - echo "skipping tests"
      # after_failure:
      #   - docker-compose -f local.yml logs
      after_success:
        - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        - unzip awscliv2.zip
        - sudo ./aws/install
        - docker-compose -f production.yml build
        - aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin 913171412485.dkr.ecr.ap-southeast-1.amazonaws.com/
        - docker-compose -f production.yml push
      deploy:
        provider: elasticbeanstalk
        region: ap-southeast-1
        app: django-docker
        env: DjangoDocker-env-1
        bucket_name: elasticbeanstalk-ap-southeast-1-913171412485
        bucket_path: django-docker
        on:
          branch: master
        access_key_id: "$AWS_ACCESS_KEY"
        secret_access_key: "$AWS_SECRET_KEY"
